---
import Layout from "../../layouts/Layout.astro";
import Construction from "../../components/Construction.astro";
import { Image, Picture } from "astro:assets";
import { Icon } from "astro-icon/components";
import portrait from "../../images/portrait.png";
import { getCollection } from "astro:content";
import { getEntry } from "astro:content";
import Progress from "../../components/Progress.astro";

export function getStaticPaths() {
	return [
		{ params: { lang: "fr" as const } },
		{ params: { lang: "en" as const } },
	];
}

const { lang } = Astro.params;

const txts = (
	{
		fr: {
			lang: "Language",
			writen: "Ecris",
			spoken: "Parler",
			hobby: "Passe-Temps",
			hobbyList: ["Programmation", "Camping", "Jeux en ligne"],
		},
		en: {
			lang: "Language",
			writen: "Writen",
			spoken: "Spoken",
			hobby: "Hobbies",
			hobbyList: ["Programation", "Camping", "Online gaming"],
		},
	} as const
)[lang];
---

<Layout title="Welcome to Astro.">
	{import.meta.env.PROD && <Construction />}
	<header>
		<div class="portrait">
			<Image
				widths={[240, 540, 720, portrait.width]}
				sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, ${portrait.width}px`}
				src={portrait}
				alt="Portrait of Marc-Antoine"
			/>
			<button
				class="outline contrast cryptedmailjs"
				data-name="marc-antoine"
				data-domain="desrochers"
				data-tld="space"
			>
				<Icon name="mdi:email-outline" size="1.25rem" />
			</button>
		</div>
		<b>Marc-Antoine Desrochers</b>
		<nav>
			<a href={`/${lang}/`} aria-current="page">Home</a>
			<a href="#">Services</a>
			<a href="#">Products</a>
		</nav>
	</header>
	<main class="container">
		<div>
			{
				getEntry(lang, "description").then((e) =>
					e.render().then(({ Content }) => <Content />),
				)
			}
		</div>
		<aside>
			<div>
				<h3>
					{txts.lang}
					<span style="float: right"><Icon name="lang" /></span>
				</h3>
				<b>{txts.writen}</b>
				<Progress value={100} link="/fr/"> Francais </Progress>
				<Progress value={98} link="/en/"> English </Progress>
				<b>{txts.spoken}</b>
				<Progress value={100} link="/fr/">Francais</Progress>
				<Progress value={75} link="/en/">English</Progress>
				<h3>
					{txts.hobby}
				</h3>
				<ul>
					{txts.hobbyList.map((h) => <li>{h}</li>)}
				</ul>
			</div>
		</aside>

		<section>
			<h2></h2>
		</section>
	</main>
	<footer></footer>
</Layout>

<style lang="scss" is:global>
	body {
		display: grid;
		height: 100vh;
		width: 100vw;
		grid-auto-rows: 1fr min-content;
		grid-template-areas:
			"a b b"
			"c c c";
		column-gap: 2rem;
	}

	@media (max-width: 1354px) {
		body {
			grid-auto-rows: min-content 1fr min-content;
			grid-template-areas:
				"a"
				"b"
				"c";
		}
	}
</style>

<style lang="scss">
	[data-icon="lang"] {
		vertical-align: -10%;
	}

	header {
		grid-area: a;

		display: grid;
		grid-template-areas:
			"img"
			"name"
			"nav"
			".";
		grid-template-rows: min-content min-content min-content;
		justify-items: center;
		padding-inline: 1rem;
		gap: 2rem;

		background: linear-gradient(
			to right,
			var(--pico-primary) 98%,
			rgba(0, 0, 0, 0)
		);
		--pico-color: var(--pico-primary-inverse);
		:global(*) {
			--pico-color: var(--pico-primary-inverse);
		}

		> b {
			grid-area: name;
			text-align: center;
			color: var(--pico-color);
		}

		nav {
			grid-area: nav;
			display: flex;
			flex-direction: column;
			text-align: center;
			width: 100%;

			a {
				box-sizing: border-box;
				display: block;
				width: 100%;
				padding: 1rem;
				color: var(--pico-primary-inverse);
				text-decoration: none;
			}

			a:is([aria-current]) {
				text-decoration: underline;
			}

			a:hover {
				box-shadow: inset 0px 0px 0px var(--pico-border-width)
					var(--pico-primary-inverse);
			}
		}

		.portrait {
			grid-area: img;
			position: relative;
			width: 10rem;
			height: 10rem;

			> button {
				position: absolute;
				bottom: 0;
				right: 0;
				border: none;
				padding: 0;
				--pico-line-height: 1rem;

				&:focus {
					box-shadow: none;
				}
			}
			img {
				object-fit: contain;
				height: 100%;
				width: auto;
				background-color: rgba(0, 0, 0, 50%);
				clip-path: circle(49%);
			}
		}
	}
	main {
		grid-area: b;
		display: flex;
		gap: 2rem;
		aside {
			min-width: 15rem;
			border: 0.5rem solid;
			padding: 1rem;
			height: fit-content;
			//background-color: var(--pico-secondary-background);
		}
	}
	footer {
		grid-area: c;
		height: 2rem;
		width: 100vw;
	}

	@media (max-width: 1354px) {
		header {
			grid-template-areas:
				"img name"
				"img nav";
			grid-template-columns: min-content 1fr;
			grid-template-rows: unset;
			gap: 0;
			column-gap: 2rem;

			background: linear-gradient(
				to bottom,
				var(--pico-primary) 98%,
				rgba(0, 0, 0, 0)
			);

			> b {
				align-self: flex-end;
				justify-self: start;
			}

			nav {
				text-align: start;
				flex-direction: row;
				width: auto;
				justify-self: start;
				align-self: end;
			}
		}
	}
</style>
