---
import { getCollection } from "astro:content";
import { getEntry } from "astro:content";
import SkillSection from "../../components/SkillSection.astro";
import CVLayout from "../../layouts/CVLayout.astro";

export function getStaticPaths() {
	return [
		{ params: { lang: "fr" as const } },
		{ params: { lang: "en" as const } },
	];
}

const { lang } = Astro.params;

const txts = (
	{
		fr: {
			otherLang: "English",
			_otherLang: "en",
			skills: "Comp√©tences",
			post: "Posts",
		},
		en: {
			otherLang: "Francais",
			_otherLang: "fr",
			skills: "Skills",
			post: "Posts",
		},
	} as const
)[lang];
---

<CVLayout
	title="Marc-Antoine Desrochers"
	nav={[
		{
			href: `/${txts._otherLang}/`,
			txt: txts.otherLang,
			icon: "lang",
		},
		{
			href: `#skills`,
			txt: txts.skills,
		},
		{
			href: `#post`,
			txt: txts.post,
		},
	]}
>
	<Fragment slot="desc">
		{
			getEntry(lang, "description").then((e) =>
				e.render().then(({ Content }) => <Content />),
			)
		}
	</Fragment>
	<Fragment>
		<SkillSection />
		<section id="post_section" class="container-fluid">
			<h2 id="post">{txts.post}</h2>
			<div>
				{
					getCollection("post").then((c) =>
						c.map((a) => {
							const [fLang, ...slug] = a.slug.split("/");
							if (fLang != lang) return;
							const link = `/${lang}/post/${slug.join("/")}`;
							return (
								<a href={link}>
									<article>
										<h1>{a.data.title}</h1>
										<p>{a.data.short}</p>
									</article>
								</a>
							);
						}),
					)
				}
			</div>
		</section>
	</Fragment>
	<Fragment slot="footer"></Fragment>
</CVLayout>

<style lang="scss">
	[data-icon="lang"] {
		vertical-align: -10%;
	}

	#post_section {
		padding: 1rem;
		margin-bottom: 0;
		background-color: var(--pico-secondary-background);

		#post {
			--pico-color: var(--pico-secondary-inverse);
			text-align: center;
		}

		> div {
			display: flex;
			flex-wrap: wrap;
			gap: 1rem;
			padding-inline: 1rem;
			justify-content: space-around;

			> a {
				--pico-color: var(--pico-h1-color);
				text-decoration: unset;
				display: block;
				width: 20rem;
				background: var(--pico-background-color);

				transition: transform 0.2s;
				&:hover {
					transform: scale(101%) rotate(0.001turn);
				}
			}
		}
	}
</style>
