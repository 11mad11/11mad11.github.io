---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
	<script>
		Array.from(document.querySelectorAll(".cryptedmail")).forEach(
			function (element) {
				let e = element as HTMLElement;
				e.addEventListener("click", () => {
					window.location.href =
						"mailto:" +
						e.dataset.name +
						"@" +
						e.dataset.domain +
						"." +
						e.dataset.tld;
				});
			},
		);
	</script>
</html>
<style lang="scss" is:global>
	@use "@picocss/pico";

	.cryptedmail:after {
		content: attr(data-name) "@" attr(data-domain) "." attr(data-tld);
	}

	.slim {
		padding: calc(var(--pico-form-element-spacing-vertical) / 2)
			calc(var(--pico-form-element-spacing-horizontal) / 2);
	}

	.text {
		color: var(--pico-dropdown-color);
	}
	[data-icon],[data-icon] * {
		color: var(--pico-dropdown-color);
		fill: var(--pico-dropdown-color);
	}

	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>
