---
import Layout from "./Layout.astro";
import Construction from "../components/Construction.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import portrait from "../images/portrait.png";
import Portrait from "../components/Portrait.astro";

interface Props {
	title: string;
	nav: {
		icon?: string;
		txt: string;
		href: string;
	}[];
}

const props = Astro.props;
const local = Astro.currentLocale;
const otherLang = { fr: "en", en: "fr" }[local!];
---

<Layout title={props.title}>
	{import.meta.env.PROD && <Construction />}
	<header>
		{
			/*need that div only for 4k screen. The background is cut by max-width without it.*/
		}
		<div>
			<div class="left">
				<a
					class="lang"
					href={`/${otherLang}/`}
					aria-label="Change language"
				>
					<Icon name="lang" size="1.25rem" />
					<span>{otherLang}</span>
				</a>
				<Portrait width="10rem" />
				<b>Marc-Antoine Desrochers</b>
				<nav>
					{
						props.nav.map((l) =>
							l.icon ? (
								<a href={l.href}>
									<Icon name={l.icon} />
									{l.txt}
								</a>
							) : (
								<a href={l.href}>{l.txt}</a>
							),
						)
					}
				</nav>
			</div>
			<div class="desc">
				<slot name="desc" />
			</div>
		</div>
	</header>
	<main>
		<slot />
	</main>
	<footer>
		<slot name="footer" />
	</footer>
</Layout>

<style lang="scss">
	[data-icon="lang"] {
		vertical-align: -10%;
	}

	header {
		padding: 1rem;
		background-color: var(--pico-primary-background);

		> div {
			display: flex;
			flex-direction: column;
			max-width: 1500px;
			margin-inline: auto;
		}

		.left {
			position: relative;
			display: flex;
			flex-direction: column;
			align-items: center;
			row-gap: 1rem;
			padding: 1rem;

			background: var(--pico-primary-background);
			--pico-color: var(--pico-primary-inverse);
			:global(*) {
				--pico-color: var(--pico-primary-inverse);
			}

			> .lang {
				position: absolute;
				display: flex;
				align-items: center;
				top: -0.25rem;
				left: calc(50% - 5rem);
				transform: translateX(-25%);
				border: none;
				z-index: 1;
				padding: 1rem;
				text-decoration: none;

				span {
					font-size: 0.75rem;
					--pico-line-height: 0.75rem;
					text-transform: capitalize;
				}

				&:focus {
					box-shadow: none;
				}
			}

			nav {
				grid-area: nav;
				display: flex;
				justify-content: center;
				align-items: center;
				text-align: center;
				width: 100%;

				a {
					box-sizing: border-box;
					display: block;
					width: 100%;
					padding: 1rem;
					color: var(--pico-primary-inverse);
					text-decoration: none;
					text-wrap: nowrap;

					&:is([aria-current]) {
						text-decoration: underline;
					}

					&:hover {
						box-shadow: inset 0px 0px 0px var(--pico-border-width)
							var(--pico-primary-inverse);
					}
				}
			}

			> b {
				grid-area: name;
				text-align: center;
				color: var(--pico-color);
			}
		}

		.desc {
			border-radius: 1vmin;
			padding: 2rem;
			background-color: var(--pico-background-color);
		}
	}

	main {
		padding-block: 0;
	}

	footer {
		height: 2rem;
		width: 100%;
	}

	@media (min-width: 768px) {
		header {
			padding-left: 0;
			> div {
				flex-direction: row;
			}
			.left {
				nav {
					flex-direction: column;
				}
			}
		}
	}
</style>
